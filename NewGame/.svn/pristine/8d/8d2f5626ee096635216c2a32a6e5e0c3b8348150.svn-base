@layout("/common/_container.html"){
<script type="text/javascript">
	var ctx = "${ctxPath}";
	var grid_selector = "#grid-table";
	var pager_selector = "";
	var isFresh = true;
	var searchType = 'home';
	var _filter = '{"PlatformID":"-1","startTime":"' +getBeforeDate(30) +'","endTime":"' +getBeforeDate(1)+'"}';
	_filter = encodeURI(_filter);
	var typeInfo = {
			home: {
				title: '用户日强活跃数据统计',
				xName: '日强活跃(人)',
				barName: {
					tName: '总强活跃',
					sName: 'IOS强活跃',
					rName: '安卓强活跃',
					pcName:'PC强活跃'
				}
			},
			day: {
				title: '用户日活跃数据统计',
				xName: '日活跃(人)',
				barName: {
					tName: '总日活跃',
					sName: 'IOS日活跃',
					rName: '安卓日活跃',
					pcName:'PC活跃'
				}
			},
			week: {
				title: '用户周活跃数据统计',
				xName: '周活跃(人)',
				barName: {
					tName: '总周活跃',
					sName: 'IOS周活跃',
					rName: '安卓周活跃',
					pcName:'PC周活跃'
				}
			},
			month: {
				title: '用户月活跃数据统计',
				xName: '月活跃(人)',
				barName: {
					tName: '总月活跃',
					sName: 'IOS月活跃',
					rName: '安卓月活跃',
					pcName:'PC月活跃'
				}
			}
	}

	$(function() {
		backDom('用户活跃统计','statistics_useractivity');
		initHomeTable();
		var info = typeInfo['home'];
		initEchart('home-chart',info,'${ctxPath}/statistics/getActivityAxis?where='+_filter+'&type=home');
		
		$("#start_time").val(getBeforeDate(30));
		$("#end_time").val(getBeforeDate(1));
	});
	
	function initHomeTable() {
		var grid_url = ctx + "/${code}/ualist";
		var _colNames = ["日期","活跃总人数","IOS活跃人数","安卓活跃人数","PC活跃人数"];
		var _colModel = [
				            {name : "CollectDate", width : 100, sortable:false,align:'center'}, 
				            {name : "Total", width : 100, sortable:false,align:'center'},
				            {name : "IOS", width : 100, sortable:false,align:'center'},
				            {name : "Android", width : 100, sortable:false,align:'center'},
				            {name : "PC", width : 100, sortable:false,align:'center'}
				           ];
		initGrid('home',grid_selector,grid_url,_colNames,_colModel);
	}

	function initGrid(type,t_selector,grid_url,_colNames,_colModel) {
		//var grid_url = ctx + "/${code}/urlist";//查询列表接口
		var objToal = {
				UserNum: 0
		};
		jQuery(t_selector).jqGrid({
			url: grid_url,
			shrinkToFit : true,//适用于较少字段,响应式
			colNames : _colNames,
			colModel : _colModel,
			postData : {where:_filter,type:'home'},
			multiselect : false,
			rownumbers : false,
			rowNum:-1,
			afterInsertRow: function(rowid, rowdata, rowelem) {
				if(BladeTool.isNotEmpty(rowdata['Total'])) {
					objToal['UserNum'] += rowdata['Total'];
				}
			},
			gridComplete:function() {
				$("#UserNum").text(fmoney(objToal['UserNum'],0));
				objToal = {
						UserNum: 0
				};
			}
		});
	}
</script>

<ul id="myTab" class="nav nav-tabs">
	<li class="active">
		<a href="#home" data-toggle="tab">用户日强活跃</a>
	</li>
	<li><a href="#day" data-toggle="tab">用户日活跃</a></li>
	<li><a href="#week" data-toggle="tab">用户周活跃</a></li>
	<li><a href="#month" data-toggle="tab">用户月活跃</a></li>
</ul>
<!-- 配置grid -->
<div class="row" style="margin-top:10px;">
	<form data-url="" method="post" class="" role="form">
		<!-- 配置查询 -->
		<div class="statistics-search">
			<!-- 简单查询第一组 -->
			<span id="GameTypeForm">
				<label class=""> 游戏平台： </label> 
				<select id="ptypeid"></select>
			</span>
			<!-- 简单查询第二组 -->
			<label class=""> 时间： </label> 
			<input type="text" id="start_time" value="" class="" />
			- 
			<input type="text" id="end_time" value="" class="" />

			<!-- 简单查询按钮 -->
			<label class="">
				<button class="btn btn-sx btn-white btn-search" type="button" onclick="goSearch()">查询</button>
			</label>
		</div>
	</form>
</div>
<div id="myTabContent" class="tab-content">
	<div class="tab-pane fade in active" id="home">
		<div id="home-chart" style="height: 450px;"></div>
		<div class="total-block">
		总活跃：<span class="text-red" id="UserNum">0</span>人
		</div>
		<!-- grid -->
		<table id="grid-table"></table>
	</div>
</div>

<script src="${ctxPath}/static/echarts/echarts.min.js"></script>
<script src="${ctxPath}/static/laydate/laydate.js"></script>
<script type="text/javascript">
		$('.nav-tabs a').on('show.bs.tab', function(event){
	        //$(event.target.hash).css("height","450px").siblings().css("height","0");
	        var id = event.target.hash.replace('#','');
	        searchType = id;
	        genEchart(id);
			$jqGrid.jqGrid("setGridParam", {
				datatype : "json",
				postData : {
					where : _filter,
					type: id
				}
			}).trigger("reloadGrid");
	    });
		
		function genEchart(id) {
			var dataUrl = '${ctxPath}/statistics/getActivityAxis?where='+_filter+'&type='+id;
			$("#start_time").val(getBeforeDate(30));
			$("#end_time").val(getBeforeDate(1));
			initEchart('home-chart',typeInfo[id],dataUrl);
		}
		
		function initEchart(id,info,dataUrl) {
			 // 基于准备好的dom，初始化echarts实例
	        var myChart = echarts.init(document.getElementById(id));
			myChart.showLoading(); 
 			$.get(dataUrl, function (data) {
				var homexdata = JSON.parse(data);
				var d = homexdata.data.data;
				var xAxisData = [];
				var data = [];
				for (var i = 0; i < d.length; i++) {
					xAxisData[i] = d[i][0];
					data[i] = d[i][1];
				}
				
				var d1 = homexdata.data.data1;
				var xAxisData1 = [];
				var data1 = [];
				for (var i = 0; i < d1.length; i++) {
					xAxisData1[i] = d1[i][0];
					data1[i] = d1[i][1];
				}

				var d2 = homexdata.data.data2;
				var xAxisData2 = [];
				var data2 = [];
				for (var i = 0; i < d2.length; i++) {
					xAxisData2[i] = d2[i][0];
					data2[i] = d2[i][1];
				}

				var d3 = homexdata.data.data3;
				var xAxisData3 = [];
				var data3 = [];
				for (var i = 0; i < d3.length; i++) {
					xAxisData3[i] = d3[i][0];
					data3[i] = d3[i][1];
				}
				
				genEcharts(myChart,xAxisData,data,data1,data2,data3,info);
				myChart.hideLoading(); 
			});
 		}
		
		function genEcharts(myChart,xAxisData,data,data1,data2,data3,info) {
	        var xData = [];
	        
	        // 指定图表的配置项和数据
	        var option = {
	            title: {
	                text: info['title'],
		            left: 'center'
	            },
	            tooltip: {trigger: 'axis'},
	            legend: {
		        	show: true,
		        	data: [info['barName']['tName'],info['barName']['sName'],info['barName']['rName'],info['barName']['pcName']],
	                left: 'right',
	                y:'middle',
	                orient: 'vertical',
	                padding: [
	                          5,  // 上
	                          30, // 右
	                          5,  // 下
	                          5, // 左
	                      ]
	            },
	            xAxis: {
	            	axisTick:{
	            		interval:0,
	            		show:true,
	            		alignWithLabel:true
	            	},
	            	axisLabel: {
	            		show:true,
	            		interval:0,
	            		rotate:30,
 	            		formatter: function(value, index) {
 	            			if(searchType == 'home' || searchType == 'day') {
	 	            			// 格式化成月/日，只在第一个刻度显示年份
	 	            		    var date = new Date(value);
	 	            		    var texts = [(date.getMonth() + 1), date.getDate()];
	 	            		    return texts.join('-');
 	            			} else {
 	            				return value + ((searchType=='week')?'周':'月');
 	            			}
 	            		}
	            	},
	            	boundaryGap:true,
	            	data: xAxisData
	            },
	            yAxis: {
	            	type : 'value',
	                name : info['xName'],
	                /*axisLabel : {
	                    formatter: '{value} k'
	                },*/
	                nameLocation:'middle',
	                nameRotate:360,
	                nameGap:40
	            },
	            series: [{
 	                name: info['barName']['tName'],
 	                type: 'line',
 	                data: data,
 	               symbol: 'circle',
 	              symbolSize: 8,
 	             itemStyle: {
   	            	normal: {
   	            		color: '#33C3F7'
   	            	}
   	             },
 	             lineStyle: {
 	            	normal: {
 	            		color: '#33C3F7'
 	            	}
 	             }
 	            },{
 	                name: info['barName']['sName'],
 	                type: 'line',
 	                data: data1,
 	               symbol: 'diamond',
  	              symbolSize: 8,
  	            itemStyle: {
   	            	normal: {
   	            		color: 'black'
   	            	}
   	             },
  	             lineStyle: {
  	            	normal: {
  	            		color: 'black'
  	            	}
  	             }
 	            },{
 	                name: info['barName']['rName'],
 	                type: 'line',
 	                data: data2,
 	               symbol: 'rect',
  	              symbolSize: 8,
  	            itemStyle: {
   	            	normal: {
   	            		color: 'green'
   	            	}
   	             },
  	             lineStyle: {
  	            	normal: {
  	            		color: 'green'
  	            	}
  	             }
 	            },{
 	                name: info['barName']['pcName'],
 	                type: 'line',
 	                data: data3,
 	               symbol: 'rect',
  	              symbolSize: 8,
  	            itemStyle: {
   	            	normal: {
   	            		color: 'purple'
   	            	}
   	             },
  	             lineStyle: {
  	            	normal: {
  	            		color: 'purple'
  	            	}
  	             }
 	            }]
	        };

	        // 使用刚指定的配置项和数据显示图表。
	        myChart.setOption(option);
	        window.onresize = myChart.resize;
		}
	
	laydate({
		elem : '#start_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		max:laydate.now(-1),
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	laydate({
		elem : '#end_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		max:laydate.now(-1),
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	// 获取平台列表
	new Ajax("${ctxPath}/newsplatform/getPlatformInfo", function (data) {
        console.log(data);
        if(data.code == 0 && BladeTool.isNotEmpty(data.data)) {
        	var type = data.data;
        	var html = '<option value="-1">请选择</option>';
        	for (var i = 0; i < type.length; i++) {
				html += '<option value="' + type[i]['clientType'] + '">' + type[i]['name'] + '</option>';
			}
        	$("#ptypeid").html(html);
        }
 	}).start();
	
	function goSearch() {
		var wheres = {};
		
		var PlatformID = $("#ptypeid").val();
		if(BladeTool.isNotEmpty(PlatformID)) {
			wheres['PlatformID'] = PlatformID;
		}
		var start_time = $("#start_time").val();
		var end_time = $("#end_time").val();

		if(BladeTool.isNotEmpty(end_time) && BladeTool.isEmpty(start_time)) {
			layer_alert('请输入开始时间!', "warn");
	    	return;
		} else if(BladeTool.isNotEmpty(end_time)) {
			wheres['endTime'] = end_time;
		}
		if(BladeTool.isNotEmpty(start_time)) {
			wheres['startTime'] = start_time;
			if(BladeTool.isEmpty(end_time)) {
				wheres['endTime'] = getBeforeDate(1);
				$("#end_time").val(getBeforeDate(1));
			}
		}
		
        var where = "";
		
		$.each(wheres, function(key, value) {
			if (BladeTool.isNotEmpty(key) && BladeTool.isNotEmpty(value)) {
				where += "\"" + key + "\":\"" + value + "\"" + ",";
			}
		});
		
		if (BladeTool.isNotEmpty(where)) {
			where = '{' + where;
			where = where.substring(0, where.length - 1);
			where += '}';
		}
        
		where = BladeTool.isEmpty(where) ? "" : encodeURI(where);
		isAutoPage = (BladeTool.isEmpty(where) ? true : false);
		
		var _curl = '${ctxPath}/statistics/getActivityAxis?where='+where+'&type='+searchType;
		// 更新图表
		initEchart('home-chart',typeInfo[searchType],_curl);
		// 更新表格
		$jqGrid.jqGrid("setGridParam", {
			datatype : "json",
			postData : {
				where : where,
				type: searchType
			}
		}).trigger("reloadGrid");
	}
</script>

<!-- 引入列表页所需js -->
@include("/common/_listscript.html"){}
@}