@layout("/common/_container.html"){
<style>
#gview_register-grid-table .ui-jqgrid-bdiv{
	height:auto !important;
}
.tab-content > .tab-pane, .pill-content > .pill-pane {
    overflow: hidden;
}
.ui-jqgrid .ui-jqgrid-bdiv {
   overflow-y: auto;
}
</style>
<script type="text/javascript">
	var ctx = "${ctxPath}";
	var grid_selector = "#grid-table";
	var pager_selector = "";
	var isFresh = true;
	var type = 'home';
	var _filter = '{"PlatformID":"-1","StartTime_datelt":"' +getBeforeDate(30) +'","EndTime_dategt":"' +getBeforeDate(1)+'"}';
	_filter = encodeURI(_filter);

	$(function() {
		backDom('日注册统计','statistics_register');
		initHomeTable();
		var info = {
			title: '用户注册数据统计',
			xName: '注册(人)',
			barName: {
				tName: '总注册',
				sName: 'IOS',
				rName: '安卓',
				pcName: 'PC'
			}
		};
		initEchart('home-chart',info,'${ctxPath}/statistics/getRegisterAxis?where='+_filter);
		
		$("#start_time").val(getBeforeDate(30));
		$("#end_time").val(getBeforeDate(1));
	});
	
	function initHomeTable() {
		var grid_url = ctx + "/${code}/dglist";
		var _colNames = ["日期","总注册","新充值","新兑换","IOS","安卓","PC注册","未进房间","所占比例"];
		var _colModel = [
				            {name : "CollectDate", width : 100, sortable:false,align:'center'}, 
				            {name : "RegisterCount", width : 100, sortable:false,align:'center'},
            				{name : "NewUserUpman", width : 100, sortable:false,align:'center'},
            				{name : "NewUserDownman", width : 100, sortable:false,align:'center'},
				            {name : "IOSReg", width : 100, sortable:false,align:'center'},
				            {name : "AndReg", width : 100, sortable:false,align:'center'},
				            {name : "PCReg", width : 100, sortable:false,align:'center'},
				            {name : "UnEnterCount", width : 100, sortable:false,align:'center'},
				            {name : "Rate", width : 100, sortable:false,align:'center', formatter:"number", formatoptions:{"defaulValue ":0,thousandsSeparator:",",decimalPlaces:3} }
				           ];
		var data = {
			where:_filter,
			sort:'writedate',
			order:'desc'
		};
		initGrid('home',grid_selector,grid_url,_colNames,_colModel,data);
	}

	function initRegisterTable() {
		_filter = '{"StartTime_datelt":"' +getBeforeDate(0) +'","EndTime_dategt":"' +getBeforeDate(0)+'"}';
		_filter = encodeURI(_filter);
		var grid_url = ctx + "/${code}/nglist";
		var _colNames = ["游戏主包","总注册"];
		var _colModel = [
				            {name : "AccountTypeName", width : 100, sortable:false,align:'center'}, 
				            {name : "RegisterCount", width : 100, sortable:false,align:'center'}
				            ];
		var data = {
				where:_filter
			};
		initGrid('register',"#register-grid-table",grid_url,_colNames,_colModel,data);
		//$('.ui-jqgrid-bdiv').css('height','auto!important');
	}
	
	function rowShow(cellvalue, options, rowObject) {
		var html = '<span class="text-red">--</span>';
		return html;
	}

	function initGrid(type,t_selector,grid_url,_colNames,_colModel,data) {
		//var grid_url = ctx + "/${code}/urlist";//查询列表接口
		jQuery(t_selector).jqGrid({
			url: grid_url,
			shrinkToFit : true,//适用于较少字段,响应式
			colNames : _colNames,
			colModel : _colModel,
			postData : data,
			multiselect : false,
			rownumbers : false,
			rowNum:-1,
			gridComplete:function() {
				if(type=='home'){
					var PlatformID = $("#ptypeid").val();
					if(BladeTool.isEmpty(PlatformID)) {
						PlatformID = '-1';
					}
					new Ajax("${ctxPath}/statistics/getDayReg?PlatformID="+PlatformID, function (data) {
				        if(data.code == 0) {
				        	var temp = data.data;
							//$("#DayReg").text(fmoney(data.data.RegisterCount,0));//当日总充值
							var html = '<tr role="row" id="0" tabindex="0" class="ui-widget-content jqgrow ui-row-ltr ui-state-highlight" aria-selected="true">';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.writedate+'" aria-describedby="grid-table_CollectDate">'+temp.writedate+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.totalreg+'" aria-describedby="grid-table_RegisterCount">'+temp.totalreg+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.newUserUpman+'" aria-describedby="grid-table_newUserUpman">'+temp.newUserUpman+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.newUserDownman+'" aria-describedby="grid-table_newUserDownman">'+temp.newUserDownman+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.iosregcount+'" aria-describedby="grid-table_IOSReg">'+temp.iosregcount+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.andregcount+'" aria-describedby="grid-table_AndReg">'+temp.andregcount+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.pcregcount+'" aria-describedby="grid-table_PCReg">'+temp.pcregcount+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.unenter+'" aria-describedby="grid-table_UnEnterCount">'+temp.unenter+'</td>';
				        	html += '<td role="gridcell" style="text-align:center;" title="'+temp.rate+'" aria-describedby="grid-table_Rate">'+fmoney(temp.rate,3)+'</td>';
				        	html += '</tr>';
							$('#1').before(html);
				        }
				 	}).start();
				}
			}
		});
	}
</script>

<ul id="myTab" class="nav nav-tabs">
	<li class="active">
		<a href="#home" data-toggle="tab">日注册量统计</a>
	</li>
	<li><a href="#register" data-toggle="tab">当日注册</a></li>
</ul>
<!-- 配置grid -->
<div class="row" style="margin-top:10px;">
	<form data-url="" method="post" class="" role="form">
		<!-- 配置查询 -->
		<div class="statistics-search" id="homeSearch">
			<!-- 简单查询第一组 -->
			<span id="GameTypeForm">
				<label class=""> 游戏平台： </label> 
				<select id="ptypeid"></select>
			</span>
			<!-- 简单查询第二组 -->
			<label class=""> 时间： </label> 
			<input type="text" id="start_time" value="" class="" />
			- 
			<input type="text" id="end_time" value="" class="" />

			<!-- 简单查询按钮 -->
			<label class="">
				<button class="btn btn-sx btn-white btn-search" type="button" onclick="goSearch()">查询</button>
			</label>
		</div>
		<div class="statistics-search hide" id="daySearch">
			<!-- 简单查询第一组 -->
			<label class=""> 时间： </label> 
			<input type="text" id="day_start_time" value="" class="" />
			- 
			<input type="text" id="day_end_time" value="" class="" />

			<!-- 简单查询按钮 -->
			<label class="">
				<button class="btn btn-sx btn-white btn-search" type="button" onclick="goSearch()">查询</button>
			</label>
		</div>
	</form>
</div>
<div id="myTabContent" class="tab-content">
	<div class="tab-pane fade in active" id="home">
		<div id="home-chart" style="height: 450px;"></div>
		<!-- grid -->
		<table id="grid-table"></table>
	</div>
	<div class="tab-pane fade" id="register">
		<!-- grid -->
		<table id="register-grid-table"></table>
	</div>
</div>

<script src="${ctxPath}/static/echarts/echarts.min.js"></script>
<script src="${ctxPath}/static/laydate/laydate.js"></script>
<script type="text/javascript">
		$('.nav-tabs a').on('show.bs.tab', function(event){
	        //$(event.target.hash).css("height","450px").siblings().css("height","0");
	        var id = event.target.hash.replace('#','');
	        var display = id=='home' ? '':'none';
	        $('#GameTypeForm').css("display",display);
	        if(id == 'home'){
	        	$('#homeSearch').removeClass('hide');
	        	$('#daySearch').addClass('hide');
	        } else {
	        	$('#homeSearch').addClass('hide');
	        	$('#daySearch').removeClass('hide');
	        }
	        genEchart(id);
	    });
		
		function genEchart(id) {
			switch(id) {
				case 'home':
					type = 'home';
					break;
				case 'register':
					type = 'register';
					if(isFresh) {
						initRegisterTable();
						$("#day_start_time").val(getBeforeDate(0));
						$("#day_end_time").val(getBeforeDate(0));
						isFresh = false;
					}
					break;
				default:
					break;
			}
		}
		
		function initEchart(id,info,dataUrl) {
			 // 基于准备好的dom，初始化echarts实例
	        var myChart = echarts.init(document.getElementById(id));
			myChart.showLoading(); 
 			$.get(dataUrl, function (data) {
				var tempdata = JSON.parse(data);
				var len = tempdata.length;
				var xAxisData = [];
				var totaldata = [];
				var iosdata = [];
				var anddata = [];
				var pcdata = [];
				for ( var i=0; i<len;i++) {
					xAxisData[i]=tempdata[i]['CollectDate'];
					totaldata[i] = tempdata[i]['RegisterCount'];
					iosdata[i] = tempdata[i]['IOSReg'];
					anddata[i] = tempdata[i]['AndReg'];
					pcdata[i] = tempdata[i]['PCReg'];
				}
				
				genEcharts(myChart,info,xAxisData,totaldata,iosdata,anddata,pcdata);
				myChart.hideLoading(); 
			});
 		}
		
		function genEcharts(myChart,info,xAxisData,totaldata,iosdata,anddata,pcdata) {
	        var xData = [];
	        
	        // 指定图表的配置项和数据
	        var option = {
	            title: {
	                text: info['title'],
		            left: 'center'
	            },
	            tooltip: {trigger: 'axis'},
	            legend: {
		        	show: true,
		        	data: [info['barName']['tName'],info['barName']['sName'],info['barName']['rName'],info['barName']['pcName']],
	                left: 'right',
	                y:'middle',
	                orient: 'vertical',
	                padding: [
	                          5,  // 上
	                          40, // 右
	                          5,  // 下
	                          5, // 左
	                      ]
	            },
	            xAxis: {
	            	axisTick:{
	            		interval:0,
	            		show:true,
	            		alignWithLabel:true
	            	},
	            	axisLabel: {
	            		show:true,
	            		interval:0,
	            		rotate:30,
 	            		formatter: function(value, index) {
 	            			// 格式化成月/日，只在第一个刻度显示年份
 	            		    var date = new Date(value);
 	            		    var texts = [(date.getMonth() + 1), date.getDate()];
 	            		    return texts.join('-');
 	            		}
	            	},
	            	boundaryGap:true,
	            	data: xAxisData
	            },
	            yAxis: {
	            	type : 'value',
	                name : info['xName'],
	                /*axisLabel : {
	                    formatter: '{value} k'
	                },*/
	                nameLocation:'middle',
	                nameRotate:360,
	                nameGap:40
	            },
	            series: [{
 	                name: info['barName']['tName'],
 	                type: 'line',
 	                data: totaldata,
 	               symbol: 'circle',
 	              symbolSize: 8,
 	             itemStyle: {
   	            	normal: {
   	            		color: '#33C3F7'
   	            	}
   	             },
 	             lineStyle: {
 	            	normal: {
 	            		color: '#33C3F7'
 	            	}
 	             }
 	            },{
 	                name: info['barName']['sName'],
 	                type: 'line',
 	                data: iosdata,
 	               symbol: 'diamond',
  	              symbolSize: 8,
  	            itemStyle: {
   	            	normal: {
   	            		color: 'black'
   	            	}
   	             },
  	             lineStyle: {
  	            	normal: {
  	            		color: 'black'
  	            	}
  	             }
 	            },{
 	                name: info['barName']['rName'],
 	                type: 'line',
 	                data: anddata,
 	               symbol: 'rect',
  	              symbolSize: 8,
  	            itemStyle: {
   	            	normal: {
   	            		color: 'green'
   	            	}
   	             },
  	             lineStyle: {
  	            	normal: {
  	            		color: 'green'
  	            	}
  	             }
 	            },{
 	                name: info['barName']['pcName'],
 	                type: 'line',
 	                data: pcdata,
 	               symbol: 'rect',
  	              symbolSize: 8,
  	            itemStyle: {
   	            	normal: {
   	            		color: 'purple'
   	            	}
   	             },
  	             lineStyle: {
  	            	normal: {
  	            		color: 'purple'
  	            	}
  	             }
 	            }]
	        };

	        // 使用刚指定的配置项和数据显示图表。
	        myChart.setOption(option);
	        window.onresize = myChart.resize;
		}
	
	laydate({
		elem : '#start_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		max: laydate.now(-1),
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	laydate({
		elem : '#end_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		max: laydate.now(-1),
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	laydate({
		elem : '#day_start_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		max: laydate.now(),
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	laydate({
		elem : '#day_end_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		max: laydate.now(),
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	// 获取平台列表
	new Ajax("${ctxPath}/newsplatform/getPlatformInfo?rankStaus=1", function (data) {
        if(data.code == 0 && BladeTool.isNotEmpty(data.data)) {
        	var type = data.data;
        	var html = '<option value="-1">请选择</option>';
        	for (var i = 0; i < type.length; i++) {
				html += '<option value="' + type[i]['clientType'] + '">' + type[i]['name'] + '</option>';
			}
        	$("#ptypeid").html(html);
        }
 	}).start();
	
	function goSearch() {
		var wheres = {};
		var PlatformID = $("#ptypeid").val();
		if(type=='home') {
			if(BladeTool.isNotEmpty(PlatformID)) {
				wheres['PlatformID'] = PlatformID;
			}
		}
		var start_time,end_time;
		if(type=='home'){
			start_time = $("#start_time").val();
			end_time = $("#end_time").val();
		}else{
			start_time = $("#day_start_time").val();
			end_time = $("#day_end_time").val();
			if(BladeTool.isEmpty(end_time) && BladeTool.isEmpty(start_time)){
				start_time = getBeforeDate(0);
				end_time = getBeforeDate(0);
				$("#day_start_time").val(getBeforeDate(0));
				$("#day_end_time").val(getBeforeDate(0));
			}
		}
		if(BladeTool.isNotEmpty(end_time) && BladeTool.isEmpty(start_time)) {
			layer_alert('请输入开始时间!', "warn");
	    	return;
		} else if(BladeTool.isNotEmpty(end_time)) {
			wheres['EndTime_dategt'] = end_time;
		}
		if(BladeTool.isNotEmpty(start_time)) {
			wheres['StartTime_datelt'] = start_time;
			if(BladeTool.isEmpty(end_time)) {
				if(type=='home'){
					wheres['EndTime_dategt'] = getBeforeDate(1);
					$("#end_time").val(getBeforeDate(1));
				}else{
					wheres['EndTime_dategt'] = getBeforeDate(0);
					$("#day_end_time").val(getBeforeDate(0));
				}
			}
		}
        var where = "";
		
		$.each(wheres, function(key, value) {
			if (BladeTool.isNotEmpty(key) && BladeTool.isNotEmpty(value)) {
				where += "\"" + key + "\":\"" + value + "\"" + ",";
			}
		});
		
		if (BladeTool.isNotEmpty(where)) {
			where = '{' + where;
			where = where.substring(0, where.length - 1);
			where += '}';
		}
        
		where = BladeTool.isEmpty(where) ? "" : encodeURI(where);
		isAutoPage = (BladeTool.isEmpty(where) ? true : false);
		if(type=='home') {
			$jqGrid = jQuery('#grid-table');
			var info = {
					title: '用户注册数据统计',
					xName: '注册(人)',
					barName: {
						tName: '总注册',
						sName: 'IOS',
						rName: '安卓'
					}
				};
			initEchart('home-chart',info,'${ctxPath}/statistics/getRegisterAxis?where='+where);
		} else {
			$jqGrid = jQuery('#register-grid-table');
		}
		$jqGrid.jqGrid("setGridParam", {
			datatype : "json",
			postData : {
				where : where
			}
		}).trigger("reloadGrid");
	}
</script>

<!-- 引入列表页所需js -->
@include("/common/_listscript.html"){}
@}