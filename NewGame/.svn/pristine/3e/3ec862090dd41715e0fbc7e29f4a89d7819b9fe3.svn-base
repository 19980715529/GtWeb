@layout("/common/_container.html"){


<script type="text/javascript">
	var ctx = "${ctxPath}";
	var grid_selector = "#grid-table";
	var pager_selector = "#grid-pager";
	var _filter = '{"RegisterDate_dategt":"' +getBeforeDate(0) +'","RegisterDate_datelte":"' +getBeforeDate(0)+'"}';
	var obj = {
			EnterNum:0,
			OnlineNum:0
	};
	var count=0;
	$(function() {
		backDom('玩家在线时长统计列表','OnlineStatis');
		initGrid();
	});

	function initGrid() {
		var grid_url = ctx + "/${code}/oslist";//查询列表接口
		var _colnames = [ "玩家ID","玩家名称","游戏次数", "游戏时长(分钟)","日期"];
		var _colmodel = [ 
		                  {name : "UserID",sortable:false,formatter:rowShow}, 
		                  {name : "NickName",sortable:false,formatter:rowShow}, 
		                  {name : "EnterNum",sortable:false}, 
		                  {name : "OnlineNum",sortable:false},
		                  {name : "LeaveTime",sortable:false}
		                  ];
		jQuery(grid_selector).jqGrid({
			url:grid_url,
			//autowidth: true,
			shrinkToFit : true,//适用于较少字段,响应式
			colNames : _colnames,
			colModel : _colmodel,
			pager : pager_selector,
			postData : {where: _filter},
			multiselect : false,
			rownumbers : false,
			rowNum:100,
			sortname:"OnlineNum",
			sortorder:"desc",
			afterInsertRow: function(rowid, rowdata, rowelem) {
				if(BladeTool.isNotEmpty(rowdata['OnlineNum'])) {
					obj['OnlineNum'] += rowdata['OnlineNum'];
				}
				if(BladeTool.isNotEmpty(rowdata['EnterNum'])) {
					obj['EnterNum'] += rowdata['EnterNum'];
				}
				count++;
			},
			gridComplete:function() {
				if(count>0) {
					$("#EnterNum").text(fmoney(obj['EnterNum']/count,3));
					$("#OnlineNum").text(fmoney(obj['OnlineNum']/count,3));
				} else {
					$("#EnterNum").text(0);
					$("#OnlineNum").text(0);
				}
				obj = {
						EnterNum:0,
						OnlineNum:0
				};
				count=0;
			},
			beforeSelectRow: function(rowid, e) { 
				if(e.type == 'click'){
				     return false;
	            }
			}
		});
		
		function rowShow(cellvalue, options, rowObject) {
			var html = '';
			var cName = options.colModel.name;
			if(cName=='UserID' || cName=='NickName') {
				html = '<a name="'+ctx + '/player/detailinfo/' + rowObject.UserID+'" title="玩家详情" class="text-33C3F7 iframeurl" href="'+ctx + '/player/detailinfo/' + rowObject.UserID+'"><strong>' + cellvalue + '</strong></a>';
			}
			return html;
		}
	}
	function goNewTab(id) {
		window.top.addTabs({
	        id: 'player_showdetail_' + id,
	        title: '用户详情',
	        url: ctx + '/player/detailinfo/' + id,
	        icon: '',
	        close: true
	    });
	}
</script>


<!-- 配置grid -->
<div class="row">
	<form data-url="" method="post" class="" role="form">
		<!-- 配置查询 -->
		<div class="">
			<label class=""> 玩家ID： </label> 
			<input type="text" id="UserID" value="" class="" />
			<!-- 简单查询第四组 -->
			<label class=""> 游戏： </label> 
			<select id="KindID" onchange="showServer(this)"></select>
			<!-- 简单查询第一组 -->
			<label class=""> 房间： </label> 
			<!-- <select id="ServerType">
				<option value="ServerID">房间ID</option>
				<option value="ServerName">房间名称</option>
			</select> 
			<input type="text" id="ServerName" value="" placeholder=""
				class="" />  -->
			<select id="ServerID">
				<option>请选择游戏</option>
			</select>	
			
			<!-- 简单查询第二组 -->
			<label class=""> 游戏日期： </label> 
			<input type="text" id="start_time" value="" class="" />- 
			<input type="text" id="end_time" value="" class="" />

			<!-- 简单查询按钮 -->
			<label class="">
				<button class="btn btn-sx btn-white btn-search" type="button" onclick="goSearch()">查询</button>
				<button class="btn btn-sx btn-white" type="button" onclick="resetForm()">重置</button>
			</label>
		</div>
	</form>
	<!-- 按钮组 -->
	<div class="total-block">
		平均游戏次数：<span id="EnterNum">0</span>
		平均在线时长：<span id="OnlineNum">0</span>
	</div>
	<!-- grid -->
	<table id="grid-table"></table>
	<!-- 分页 -->
	<div id="grid-pager"></div>
</div>
<script src="${ctxPath}/static/laydate/laydate.js"></script>
<script type="text/javascript">
	laydate({
		elem : '#start_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		//festival: true, //显示节日
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	laydate({
		elem : '#end_time',
		format : 'YYYY-MM-DD', // 分隔符可以任意定义，该例子表示只显示年月日
		//festival: true, //显示节日
		choose : function(datas) { //选择日期完毕的回调
			/*   alert('得到：'+datas); */
		}
	});
	// 获取平台列表
	new Ajax(ctx + "/gamekind/getGameKindItem", function (data) {
	        if(data.code == 0 && BladeTool.isNotEmpty(data.data)) {
	        	var type = data.data;
	        	var html = '<option value="0">请选择</option>';
	        	for (var i = 0; i < type.length; i++) {
					html += '<option value="' + type[i]['KindID'] + '">' + type[i]['KindName'] + '</option>';
				}
	        	$("#KindID").html(html);
	        }
	 }).start();
	
	function showServer(obj){
		var kindid = $(obj).val();
		new Ajax(ctx + "/room/getRoomInfo?KindID="+kindid, function (data) {
		    if(data.code == 0 && BladeTool.isNotEmpty(data.data)) {
		    	var type = data.data;
		    	var html = '<option value="">请选择</option>';
		    	for (var i = 0; i < type.length; i++) {
		    		html += '<option value="' + type[i]['ServerID'] + '"';
					html += '>' + type[i]['ServerName'] + '</option>';
				}
		    	$("#ServerID").html(html);
		    }
		}).start();
	}
	
	function goSearch() {
		var ServerID = $("#ServerID").val();
		var UserID = $("#UserID").val();
		var KindID = $("#KindID").val();
		var wheres = {};
		
		if(BladeTool.isNotEmpty(UserID)) {
			wheres['UserID'] = UserID;
		}
		if(BladeTool.isNotEmpty(ServerID)) {
			wheres['ServerID'] = ServerID;
		}
		if(BladeTool.isNotEmpty(KindID)) {
			wheres['KindID'] = KindID;
		}

		var start_time = $("#start_time").val();
		var end_time = $("#end_time").val();
		if(BladeTool.isNotEmpty(end_time) && BladeTool.isEmpty(start_time)) {
			layer_alert('请输入开始时间!', "warn");
	    	return;
		} else if(BladeTool.isNotEmpty(end_time)) {
			wheres['RegisterDate_datelte'] = end_time;
		}
		if(BladeTool.isNotEmpty(start_time)) {
			wheres['RegisterDate_dategt'] = start_time;
			if(BladeTool.isEmpty(end_time)) {
				wheres['RegisterDate_datelte'] = getBeforeDate(0);
				$("#end_time").val(getBeforeDate(0));
			}
		}

		var filter = "";
        if (typeof (_filter) != "undefined") {
            filter = _filter;
        }
        var where = "";
		
		$.each(wheres, function(key, value) {
			if (BladeTool.isNotEmpty(key) && BladeTool.isNotEmpty(value)) {
				where += "\"" + key + "\":\"" + value + "\"" + ",";
			}
		});
		
		if (BladeTool.isNotEmpty(where)) {
			where = '{' + where;
			where = where.substring(0, where.length - 1);
			where += '}';
		}
        
		where = BladeTool.isEmpty(where) ? "" : encodeURI(where);
		isAutoPage = (BladeTool.isEmpty(where) ? true : false);
		var pageNum = $jqGrid.getGridParam('page');
		$jqGrid.jqGrid("setGridParam", {
			datatype : "json",
			postData : {
				where : where
			},
			page: (isAutoPage) ? pageNum : 1,
			afterInsertRow: function(rowid, rowdata, rowelem) {
				if(BladeTool.isNotEmpty(rowdata['OnlineNum'])) {
					obj['OnlineNum'] += rowdata['OnlineNum'];
				}
				if(BladeTool.isNotEmpty(rowdata['EnterNum'])) {
					obj['EnterNum'] += rowdata['EnterNum'];
				}
				count++;
			},
			gridComplete:function() {
				if(count>0) {
					$("#EnterNum").text(fmoney(obj['EnterNum']/count,3));
					$("#OnlineNum").text(fmoney(obj['OnlineNum']/count,3));
				} else {
					$("#EnterNum").text(0);
					$("#OnlineNum").text(0);
				}
				obj = {
						EnterNum:0,
						OnlineNum:0
				};
				count=0;
			}
		}).trigger("reloadGrid");
	}
	
	function resetForm() {
		$("input").val("");
		$("select").val("");
		$('#start_time').val(getBeforeDate(0));
		$('#end_time').val(getBeforeDate(0));
        reloadGrid();
	}
	$(function(){
		$('#start_time').val(getBeforeDate(0));
		$('#end_time').val(getBeforeDate(0));
	});
</script>

<!-- 引入列表页所需js -->
@include("/common/_listscript.html"){}
@}